@{
    Layout = "_MainAppLayout";
    ViewData["Title"] = "Email Account";
}
@addTagHelper *, Syncfusion.EJ2
@using CloudVOffice.Core.Domain.Common;
<header class="main-heading">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
                <div class="page-icon">
                    <i class="icon-laptop_windows"></i>
                </div>
                <div class="page-title">
                    <h5>Email Account</h5>
                    <h6 class="sub-heading"> </h6>
                </div>
            </div>
            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4">
                <div class="right-actions">
                    <span class="last-login"> </span>
                </div>
            </div>
        </div>
    </div>
</header>


<div class="main-content">
    <div class="row gutters">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">

                    <div class="row">
                        <div class="col-md-6">
                            Email Account
                        </div>
                       
                        <div class="col-md-6 text-right float-right">
                            <a href="/Setup/EmailAccount/EmailAccountCreate" class="btn btn-success btn-sm"><i class="icon icon-add"></i> Add Email Account</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <ejs-grid id="GridOverview" dataSource="ViewBag.EmailAccounts"
                              allowFiltering="true" allowSorting="true"
                              allowExcelExport="true" allowGrouping="true"
                              allowMultiSorting="true"
                              allowPdfExport="true"
                              height="600" rowHeight="38"
                              enableHover="false" enableHeaderFocus="true"
                              enableVirtualization="true" allowSelection="true"
                              toolbarClick="toolbarClick" toolbar="@(new List<string>() {"ExcelExport", "PdfExport", "CsvExport" ,"Search"})">

                        <e-grid-filtersettings type="Menu"></e-grid-filtersettings>

                        <e-grid-selectionsettings persistSelection="true" type="Multiple" checkboxOnly="true"></e-grid-selectionsettings>
                        <e-grid-columns>


                            <e-grid-column field="EmailAddress" headerText="Email Address" textAlign="Left" width="200"></e-grid-column>
                            <e-grid-column field="Domain" headerText="Domain" textAlign="Left" width="200"></e-grid-column>
                            <e-grid-column field="EmailAccountName" headerText="Email Account Name" textAlign="Left" width="200"></e-grid-column>
                            <e-grid-column field="EmailPassword" headerText="Email Password" textAlign="Left" width="200"></e-grid-column>
                            <e-grid-column field="AlternativeEmailAddress" headerText="Alternative Email Address" textAlign="Left" width="200"></e-grid-column>
                            <e-grid-column field="EmailSignature" headerText="Email Signature" textAlign="Left" width="200"></e-grid-column>
                            <e-grid-column field="EmailLogo" headerText="Email Logo" textAlign="Left" width="200"></e-grid-column>
                            <e-grid-column field="IsDefaultSending" headerText="Is Default Sending" textAlign="Left" width="200"></e-grid-column>
                            <e-grid-column headerText="Action" template="#Actions" width="100"></e-grid-column>
                        </e-grid-columns>
                    </ejs-grid>

                </div>
            </div>
        </div>
    </div>

</div>
@{

    if (TempData["msg"] != null)
    {
        <script type="text/javascript">
            const message = "@TempData["msg"]";
            if (message == "@((int)MessageEnum.Success)") {
                sweetAlert({
                    html: true,
                    icon: "success",
                    title: " Email Account",
                    text: "Successfully created.",
                    type: "success"
                });
            }
            else if (message == "@((int)MessageEnum.Updated)") {
                sweetAlert({
                    html: true,
                    icon: "success",
                    title: " Email Account",
                    text: "Successfully updated.",
                    type: "success"
                });
            }
            else if (message == "@((int)MessageEnum.Deleted)") {
                sweetAlert({
                    html: true,
                    icon: "success",
                    title: " Email Account",
                    text: "Successfully Deleted.",
                    type: "success"
                });
            }
            else if (message == "@((int)MessageEnum.AlreadyCreate)") {
                sweetAlert({
                    html: true,
                    icon: "warning",
                    title: " Email Account",
                    text: "You Have Already Created a Email Account. You can add only one Email Account.",
                    type: "warning"
                });
            }
            else if (message == "@((int)MessageEnum.UnExpectedError)") {
                sweetAlert({
                    html: true,
                    icon: "danger",
                    title: " Email Account",
                    text: "There is somthing going wrong.",
                    type: "danger"
                });
            }
            else if (message == "@((int)MessageEnum.Error)") {
                sweetAlert({
                    html: true,
                    icon: "error",
                    title: " Email Account",
                    text: "There is somthing going wrong.",
                    type: "error"
                });
            }
            else {
                sweetAlert({
                    html: true,
                    icon: "error",
                    title: " Email Account",
                    text: message,
                    type: "error"
                });
            }
        </script>
    }
}
<script type="text/javascript">
    function Delete(Id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this data!",
            icon: "warning",
            buttons: [
                'No, cancel it!',
                'Yes, I am sure!'
            ],
            confirmButtonColor: "#DD6B55",
            dangerMode: true,
        }).then(function (isConfirm) {
            if (isConfirm) {
                window.location.href = "../../Setup/EmailAccount/DeleteEmailAccount?EmailAccountId=" + Id;
            }
        })
    }
</script>

<script id="Actions" type="text/x-template">
    <div class="link">
        <a href="../../Setup/EmailAccount/EmailAccountCreate?EmailAccountId=${EmailAccountId}"><i class="icon-pencil3" style="font-size:22px"></i></a> &nbsp;&nbsp;&nbsp;

        <button onClick="Delete(${EmailAccountId})" style="background: transparent;border: none;"><i class="icon-trash" style="font-size:22px"></i></button>

    </div>

</script>>
<script id="statusTemplate" type="text/x-template">
    ${statusDetail(data)}
</script>
<script>
    function toolbarClick(args) {
        var gridObj = document.getElementById("GridOverview").ej2_instances[0];
        if (args.item.id === 'GridOverview_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'GridOverview_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'GridOverview_csvexport') {
            gridObj.csvExport();
        }
    }
    function exportQueryCellInfo(args) {
        if (args.column.headerText === 'Employee Image') {
            if (args.name === "excelQueryCellInfo") {
                args.image = { height: 75, base64: args.data["EmployeeImage"], width: 75 };
            } else {
                args.image = { base64: args.data["EmployeeImage"] };
            }
        }
        if (args.column.headerText === 'Track') {
            args.hyperLink = {
                target: "../../DMS/DesktopLogin/Track?id=" + args.data["erpUser"],
                displayText: "Track"
            };
        }
    };

</script>